name: Build Native Modules

on:
  push:
    tags:
      - '*-v*'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            platform: windows
            arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: macos-latest
            platform: macos
            arch: x64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Parse tag
        id: tag
        run: |
          TAG_NAME=${{ github.ref_name }}
          PROJECT_NAME=$(echo "$TAG_NAME" | sed 's/-v[0-9].*//')
          VERSION=$(echo "$TAG_NAME" | sed 's/.*-v//')
          echo "project=$PROJECT_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create package.json for native modules
        run: |
          cat > package.json << 'PACKAGE_EOF'
          {
            "name": "native-modules-builder",
            "version": "1.0.0",
            "description": "Build native Node.js modules",
            "dependencies": {
              "sqlite3": "^5.1.6",
              "bcrypt": "^5.1.1",
              "keytar": "^7.9.0"
            }
          }
          PACKAGE_EOF

      - name: Install and compile native modules
        run: npm install

      - name: Prepare binaries
        run: |
          mkdir -p binaries
          find node_modules -name "*.node" -type f | while read file; do
            if echo "$file" | grep -q "sqlite3"; then
              module_name="sqlite3"
            elif echo "$file" | grep -q "bcrypt"; then
              module_name="bcrypt"  
            elif echo "$file" | grep -q "keytar"; then
              module_name="keytar"
            else
              module_name=$(echo "$file" | sed 's|.*/node_modules/||' | cut -d'/' -f1)
            fi
            
            cp "$file" "binaries/${{ matrix.platform }}-${{ matrix.arch }}-${module_name}.node"
          done
        shell: bash

      - name: List generated binaries
        run: ls -la binaries/

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: binaries/*
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.project }} v${{ steps.tag.outputs.version }}
          body: |
            Native modules for ${{ steps.tag.outputs.project }} v${{ steps.tag.outputs.version }}
            
            **Platforms:**
            - Windows x64
            - Linux x64  
            - macOS x64
            
            **Available Modules:**
            - sqlite3.node (SQLite3 database)
            - bcrypt.node (Password hashing)  
            - keytar.node (System keychain access)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
